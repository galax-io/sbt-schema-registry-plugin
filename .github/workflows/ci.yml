name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: ['v*']

jobs:
  test:
    name: Test Release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Scala & Java
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17

      - name: Cache SBT & Coursier
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.cache/coursier
          key: sbt-${{ runner.os }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/**') }}
          restore-keys: sbt-${{ runner.os }}-

      - name: Check Formatting
        run: sbt scalafmtCheckAll scalafmtSbtCheck

      - name: Compile & Test
        run: sbt clean compile test

  publish:
    name: Publish Release
    needs: [test]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Scala & Java
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17

      - name: Cache SBT & Coursier
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.cache/coursier
          key: sbt-${{ runner.os }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/**') }}
          restore-keys: sbt-${{ runner.os }}-

      - name: Publish Release
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
