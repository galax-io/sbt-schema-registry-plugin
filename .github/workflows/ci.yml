name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: ['v*']

jobs:
  test:
    name: Test Release
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Scala & Java
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17

      - name: Cache SBT & Coursier
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.cache/coursier
          key: sbt-${{ runner.os }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/**') }}
          restore-keys: sbt-${{ runner.os }}-

      - name: Check Formatting
        run: sbt scalafmtCheckAll scalafmtSbtCheck

      - name: Compile & Test
        run: sbt clean compile test
        
      - name: Prepare release notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish Release
    needs: [test]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Scala & Java
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17

      - name: Cache SBT & Coursier
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.cache/coursier
          key: sbt-${{ runner.os }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/**') }}
          restore-keys: sbt-${{ runner.os }}-

      - name: Publish Release
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

      - name: Publish release notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}